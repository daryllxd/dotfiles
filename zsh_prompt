# setup

autoload colors; colors;
export LSCOLORS="Gxfxcxdxbxegedabagacad"
setopt prompt_subst

# prompt

ZSH_THEME_GIT_PROMPT_PREFIX="%{$reset_color%}%{$fg[green]%}["
ZSH_THEME_GIT_PROMPT_SUFFIX="]%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[red]%}*%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_CLEAN=""

# show git branch/tag, or name-rev if on detached head
parse_git_branch() {
  (command git symbolic-ref -q HEAD || command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null
}

# show red star if there are uncommitted changes
parse_git_dirty() {
  if command git diff-index --quiet HEAD 2> /dev/null; then
    echo "$ZSH_THEME_GIT_PROMPT_CLEAN"
  else
    echo "$ZSH_THEME_GIT_PROMPT_DIRTY"
  fi
}

# if in a git repo, show dirty indicator + git branch
git_custom_status() {
  local git_where="$(parse_git_branch)"
  [ -n "$git_where" ] && echo "$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_PREFIX${git_where#(refs/heads/|tags/)}$ZSH_THEME_GIT_PROMPT_SUFFIX"
}

# # show current rbenv version if different from rbenv global
# rbenv_version_status() {
#   local ver=$(rbenv version-name)
#   [ "$(rbenv global)" != "$ver" ] && echo "[$ver]"
# }

# # put fancy stuff on the right
# if which rbenv &> /dev/null; then
#   RPS1='$(git_custom_status)%{$fg[red]%}$(rbenv_version_status)%{$reset_color%} $EPS1'
# else
#   RPS1='$(git_custom_status) $EPS1'
# fi

# show merge status indicator
parse_git_merge_status() {
  local current_branch=$(git_branch_name)
  local main_branch=""

  # Skip if not in a git repo or if branch name is empty
  [ -z "$current_branch" ] && return

  # Determine main/master branch
  if git show-ref --verify --quiet refs/heads/main; then
    main_branch="main"
  elif git show-ref --verify --quiet refs/heads/master; then
    main_branch="master"
  else
    return
  fi

  # Don't show indicator if we're on main/master
  [[ "$current_branch" == "$main_branch" ]] && return

  # Check if merged and output indicator
  if git branch --merged "$main_branch" 2>/dev/null | grep -q "^[* ]*$current_branch$"; then
    echo "%{$fg[green]%}🔒%{$reset_color%}"
  else
    echo "%{$fg[yellow]%}👐%{$reset_color%}"
  fi
}

# basic prompt on the left
PROMPT='😱 $(git_custom_status) $(parse_git_merge_status) %{$fg[cyan]%}%~% %(?.%{$fg[green]%}.%{$fg[red]%})%B$%b '
